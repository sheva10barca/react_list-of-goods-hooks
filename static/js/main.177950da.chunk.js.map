{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","goods","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","hasInitialOrder","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EAhDD,SACLA,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKL,EAASc,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,KAAKjB,EAASI,KACd,QACE,OAAO,MAITG,GACFG,EAAaQ,UAGRR,EAwBOS,CAAkBlB,EAAiB,CAAEI,WAAUE,eACvDa,GAAmBb,GAAcF,IAAaL,EAASI,KAE7D,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYlB,IAAaL,EAASc,WAEtCU,QAzBe,WACrBlB,EAAYN,EAASc,WAkBjB,iCAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYlB,IAAaL,EAASgB,SAEtCQ,QAhCa,WACnBlB,EAAYN,EAASgB,SAyBjB,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAahB,IAClDiB,QAhDiB,WACvBhB,GAAeD,IA4CX,sBAQEa,GACA,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA7CW,WACnBlB,EAAYN,EAASI,MACrBI,GAAc,IAwCR,sBAUJ,6BACGC,EAAMgB,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC5HlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.177950da.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const reverseGoodsList = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const resetHandler = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n  const hasInitialOrder = !isReversed && sortType === SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !isReversed })}\n          onClick={reverseGoodsList}\n        >\n          Reverse\n        </button>\n\n        {!hasInitialOrder && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetHandler}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map((good) => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}